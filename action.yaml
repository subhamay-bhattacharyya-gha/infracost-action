name: 'Infracost Run'
description: 'Download Terraform plan artifact and run Infracost to generate cost breakdown.'

inputs:
  artifact-name:
    description: 'Name of the uploaded Terraform plan artifact'
    required: true
    default: 'terraform-plan'
  s3-bucket:
    description: "S3 bucket for Terraform backend"
    required: true
  s3-region:
    description: "AWS region where the S3 bucket is located"
    required: true
  dynamodb-table:
    description: "DynamoDB table name for state locking"
    required: true
  terraform-plan-file:
    description: 'Path to the Terraform binary plan file inside the artifact'
    required: true
    default: 'tfplan.out'
  terraform-dir:
    description: 'Directory where Terraform code is located'
    required: false
    default: 'tf'
  infracost-api-key:
    description: 'Infracost API key'
    required: true
  ci-pipeline:
    description: "Whether this is a CI pipeline"
    required: false
    default: "true"

outputs:
  monthly-cost:
    description: "Total monthly cost from Infracost"
    value: ${{ steps.infracost-json.outputs.monthly-cost }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download Terraform plan artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: plan-artifact

    - name: Setup Infracost
      uses: infracost/actions/setup@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Compute Backend Key from Repository Name
      id: key
      shell: bash
      run: |
        if [[ "${{ inputs.ci-pipeline }}" == "true" ]]; then
          state_key="${{ github.repository }}/${{ github.sha }}/terraform.tfstate"
        else
          state_key="${{ github.repository }}/terraform.tfstate"
        fi
        echo "s3_key=$state_key" >> $GITHUB_OUTPUT

    - name: Terraform Init with S3 Backend
      run: |
        terraform init -input=false \
          -backend-config="bucket=${{ inputs.s3-bucket }}" \
          -backend-config="key=${{ steps.key.outputs.s3_key }}" \
          -backend-config="region=${{ inputs.s3-region }}" \
          -backend-config="encrypt=true" \
          -backend-config="dynamodb_table=${{ inputs.dynamodb-table }}"
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}

    - name: Convert Terraform plan to JSON
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        cp ../plan-artifact/${{ inputs.terraform-plan-file }} tfplan.out
        terraform show -json tfplan.out > plan.json
        echo "----------- Terraform plan converted to JSON -----------"
        cat plan.json
        echo "---------------------------------------------------------"

    - name: Run Infracost (JSON)
      id: infracost-json
      shell: bash
      env:
        INFRACOST_API_KEY: ${{ inputs.infracost-api-key }}
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        infracost breakdown \
          --path=plan.json \
          --format=json \
          --log-level=info \
          --out-file=cost-report.json

        echo "Parsing total monthly cost from cost-report.json..."
        monthly_cost=$(jq -r '.summary.totalMonthlyCost // "0"' cost-report.json)
        echo "monthly-cost=$monthly_cost" >> $GITHUB_OUTPUT

    - name: Append cost summary to GITHUB_STEP_SUMMARY
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        echo "### ðŸ’° Infracost Cost Breakdown" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```json' >> $GITHUB_STEP_SUMMARY
        cat cost-report.json >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
