name: 'Infracost Run'
description: 'Download Terraform plan artifact and run Infracost to generate cost breakdown.'

inputs:
  artifact-name:
    description: 'Name of the uploaded Terraform plan artifact'
    required: true
    default: 'terraform-plan'
  terraform-plan-file:
    description: 'Path to the Terraform binary plan file inside the artifact'
    required: true
    default: 'tfplan.out'
  terraform-dir:
    description: 'Directory where Terraform code is located'
    required: false
    default: 'tf'
  infracost-api-key:
    description: 'Infracost API key'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download Terraform plan artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: plan-artifact

    - name: Setup Infracost
      uses: infracost/actions/setup@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      
    - name: Compute Backend Key from Repository Name
      id: key
      run: |
        if [[ "${{ inputs.ci-pipeline }}" == "true" ]]; then
          state_key="${{ github.repository }}/${{ github.sha }}/terraform.tfstate"
        else
          state_key="${{ github.repository }}/terraform.tfstate"
        fi
        echo "s3_key=$state_key" >> $GITHUB_OUTPUT
      shell: bash

    - name: Terraform Init with S3 Backend
      run: |
        terraform init -input=false \
          -backend-config="bucket=${{ inputs.s3-bucket }}" \
          -backend-config="key=${{ steps.key.outputs.s3_key }}" \
          -backend-config="region=${{ inputs.s3-region }}" \
          -backend-config="encrypt=true" \
          -backend-config="dynamodb_table=${{ inputs.dynamodb-table }}"
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}

    - name: Convert Terraform plan to JSON
      run: |
        cd plan-artifact
        terraform show -json ${{ inputs.terraform-plan-file }} > plan.json
        echo "----------- Terraform plan converted to JSON -----------"
        cat plan.json
        echo "---------------------------------------------------------"
      shell: bash

    - name: Run Infracost
      shell: bash
      run: |
        export INFRACOST_API_KEY="${{ inputs.infracost-api-key }}"
        infracost breakdown \
          --path=plan-artifact/plan.json \
          --format=table \
          --show-skipped \
          --log-level=info